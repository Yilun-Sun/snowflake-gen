{"version":3,"sources":["Canvas/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["filledCircle","props","ctx","x","y","radius","color","beginPath","arc","Math","PI","fillStyle","fill","stroke","closePath","currentParticle","particleNum","particles","noCollision","particle","i","length","sqrt","createParticle","vx","vy","object","Object","setCoords","newX","newY","this","draw","isFinished","speedX","u","random","randomSquareDistribution","speedY","particle1","console","log","drawSymmetryFlakes","show","document","getElementById","getContext","clearRect","strokeStyle","drawCoordinateLine","window","requestAnimationFrame","tempX","tempY","distance","tempAngle","atan2","particle3","cos","sin","push","particle4","Canvas","state","updateCanvas","canvasElement","offsetLeft","offsetTop","generatSnowflake","refs","canvas","translate","width","height","id","ref","React","Component","App","className","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91bb8199.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction filledCircle(props) {\r\n    const { ctx, x, y, radius, color } = props;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\n\r\nlet width = 800;\r\nlet height = 800;\r\n\r\nlet symmetry = 6;\r\n\r\nconst radius = 3;\r\nconst randomRange = 30;\r\nconst speed = 2;\r\n\r\nvar particleNum = 500;\r\n\r\nvar particles = [];\r\n\r\nvar canvasElementOffsetLeft;\r\nvar canvasElementOffsetTop;\r\n\r\n// TODO:\r\n// 1. 可以有内部空心设置\r\n// 2. 设置角度范围\r\n// 3. 粒子样式\r\n// 4. 保存按钮\r\n\r\n\r\n\r\nvar currentParticle;\r\n\r\n// function randomNum() {\r\n//     const min = -randomRange;\r\n//     const max = randomRange;\r\n//     let rand = min + Math.random() * (max - min);\r\n//     return rand;\r\n// }\r\n\r\nfunction randomSquareDistribution() {\r\n\r\n    let u = Math.random() * 2 - 1.0;\r\n\r\n    if (u >= 0)\r\n        return u * u;\r\n    else\r\n        return - u * u;\r\n}\r\n\r\nfunction noCollision(particle) {\r\n    for (let i = 0; i < particles.length; i++) {\r\n        const distance = Math.sqrt((particle.x - particles[i].x) * (particle.x - particles[i].x) + (particle.y - particles[i].y) * (particle.y - particles[i].y));\r\n\r\n        if (distance < 2 * radius) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction createParticle(x, y, vx, vy, radius, ctx) {\r\n    var object = new Object();\r\n    object.x = x;\r\n    object.y = y;\r\n    object.vx = vx;\r\n    object.vy = vy;\r\n    object.ctx = ctx;\r\n    object.radius = radius;\r\n\r\n    // let isFinished = false;\r\n\r\n    object.setCoords = function (newX, newY) {\r\n        this.x = newX;\r\n        this.y = newY;\r\n    }\r\n\r\n    object.draw = function () {\r\n        while (this.y < 0 && noCollision(object)) {\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n        }\r\n        // move follow the speed direction\r\n        if (this.y < 0 && noCollision(object)) {\r\n        }\r\n        else {\r\n            if (!this.isFinished) {\r\n                this.isFinished = true;\r\n\r\n                drawSymmetryFlakes(object);\r\n            }\r\n            else {\r\n                // create new particle\r\n                if (particleNum > 0) {\r\n                    particleNum--;\r\n                    let speedX = randomSquareDistribution();\r\n                    let speedY = Math.sqrt(4 - speedX * speedX);\r\n                    var particle1 = createParticle(speedX * 500 / Math.sqrt(3), -500, - speedX * speed, speedY * speed, radius, ctx);\r\n                    currentParticle = particle1;\r\n                }\r\n                else if (particleNum === 0) {\r\n                    console.log('Generating complete');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    object.show = function () {\r\n        filledCircle({ ctx: this.ctx, x: this.x, y: this.y, radius: this.radius, color: \"#FFFFFF\" });\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nfunction drawCoordinateLine() {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    filledCircle({ ctx, x: 0, y: 0, radius: 400 - 5, color: \"#2C2C2C\" });\r\n\r\n    ctx.strokeStyle = \"#FFFFFB\";\r\n}\r\n\r\nfunction draw() {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(-400, -400, 800, 800);\r\n    drawCoordinateLine();\r\n\r\n    // show finished particles\r\n    for (let i = 0; i < particles.length; i++) {\r\n        particles[i].show();\r\n    }\r\n\r\n    currentParticle.draw();\r\n\r\n    var raf = window.requestAnimationFrame(draw);\r\n}\r\n\r\nfunction drawSymmetryFlakes(particle) {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.strokeStyle = \"#FFFFFF\";\r\n\r\n    const tempX = particle.x;\r\n    const tempY = particle.y;\r\n    const distance = Math.sqrt(particle.x * particle.x + particle.y * particle.y);\r\n\r\n\r\n    let tempAngle = Math.atan2(tempY, tempX);\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n        var particle3 = createParticle(distance * Math.cos(tempAngle), distance * Math.sin(tempAngle), 0, 0, radius, ctx);\r\n\r\n        // particle1.isFinished = true;\r\n        particles.push(particle3);\r\n\r\n        var particle4 = createParticle(- distance * Math.cos(tempAngle), distance * Math.sin(tempAngle), 0, 0, radius, ctx);\r\n\r\n        particles.push(particle4);\r\n\r\n        tempAngle += Math.PI * 2 / symmetry\r\n\r\n    }\r\n}\r\n\r\nclass Canvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateCanvas();\r\n\r\n        var canvasElement = document.getElementById(\"canvas\");\r\n        canvasElementOffsetLeft = canvasElement.offsetLeft;\r\n        canvasElementOffsetTop = canvasElement.offsetTop;\r\n\r\n        this.generatSnowflake();\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateCanvas();\r\n    }\r\n    updateCanvas() {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        ctx.translate(width / 2, height / 2);\r\n        ctx.clearRect(0, 0, 800, 800);\r\n\r\n        filledCircle({ ctx, x: 0, y: 0, radius: 400, color: \"#2C2C2C\" });\r\n    }\r\n\r\n    generatSnowflake() {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n\r\n        particleNum--;\r\n        var particle1 = createParticle(-500, -500, speed, speed, radius, ctx);\r\n        currentParticle = particle1;\r\n\r\n        draw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas id='canvas' ref=\"canvas\" width={width} height={height} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canvas;","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Canvas from './Canvas/Canvas';\r\n\r\nfunction regen() {\r\n\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Canvas id=\"canvas\" />\r\n      </header>\r\n      {/* <button onClick={regen}> Regenerate </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}